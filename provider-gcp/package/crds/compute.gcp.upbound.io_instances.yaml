---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: instances.compute.gcp.upbound.io
spec:
  group: compute.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the Instances API. Manages a VM instance
          resource within GCE.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  advancedMachineFeatures:
                    description: Configure Nested Virtualisation and Simultaneous
                      Hyper Threading  on this VM. Structure is documented below Controls
                      for advanced machine-related behavior features.
                    items:
                      properties:
                        enableNestedVirtualization:
                          description: Defines whether the instance should have nested
                            virtualization  enabled. Defaults to false. Whether to
                            enable nested virtualization or not.
                          type: boolean
                        threadsPerCore:
                          description: he number of threads per physical core. To
                            disable simultaneous multithreading  set this to 1. The
                            number of threads per physical core. To disable simultaneous
                            multithreading (SMT) set this to 1. If unset, the maximum
                            number of threads supported per core by the underlying
                            processor is assumed.
                          type: number
                      type: object
                    type: array
                  allowStoppingForUpdate:
                    description: If true, allows Terraform to stop the instance to
                      update its properties. If you try to update a property that
                      requires stopping the instance without setting this field, the
                      update will fail. If true, allows Terraform to stop the instance
                      to update its properties. If you try to update a property that
                      requires stopping the instance without setting this field, the
                      update will fail.
                    type: boolean
                  attachedDisk:
                    description: Additional disks to attach to the instance. Can be
                      repeated multiple times for multiple disks. Structure is documented
                      below. List of disks attached to the instance
                    items:
                      properties:
                        deviceName:
                          description: Name with which the attached disk is accessible
                            under /dev/disk/by-id/
                          type: string
                        diskEncryptionKeyRawSecretRef:
                          description: A 256-bit customer-supplied encryption key,
                            encoded in RFC 4648 base64 to encrypt this disk. Only
                            one of kms_key_self_link and disk_encryption_key_raw may
                            be set.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        kmsKeySelfLink:
                          description: The self_link of the encryption key that is
                            stored in Google Cloud KMS to encrypt this disk. Only
                            one of kms_key_self_link and disk_encryption_key_raw may
                            be set.
                          type: string
                        mode:
                          description: Read/write mode for the disk. One of "READ_ONLY"
                            or "READ_WRITE".
                          type: string
                        source:
                          description: The name or self_link of the disk attached
                            to this instance.
                          type: string
                      required:
                      - source
                      type: object
                    type: array
                  bootDisk:
                    description: The boot disk for the instance. Structure is documented
                      below. The boot disk for the instance.
                    items:
                      properties:
                        autoDelete:
                          description: Whether the disk will be auto-deleted when
                            the instance is deleted. Defaults to true. Whether the
                            disk will be auto-deleted when the instance is deleted.
                          type: boolean
                        deviceName:
                          description: Name with which attached disk will be accessible
                            under /dev/disk/by-id/
                          type: string
                        diskEncryptionKeyRawSecretRef:
                          description: A 256-bit customer-supplied encryption key,
                            encoded in RFC 4648 base64 to encrypt this disk. Only
                            one of kms_key_self_link and disk_encryption_key_raw may
                            be set.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        initializeParams:
                          description: Parameters for a new disk that will be created
                            alongside the new instance. Either initialize_params or
                            source must be set. Structure is documented below. Parameters
                            with which a disk was created alongside the instance.
                          items:
                            properties:
                              image:
                                description: 'The image from which to initialize this
                                  disk. This can be one of: the image''s self_link,
                                  projects/{project}/global/images/{image}, projects/{project}/global/images/family/{family},
                                  global/images/{image}, global/images/family/{family},
                                  family/{family}, {project}/{family}, {project}/{image},
                                  {family}, or {image}. If referred by family, the
                                  images names must include the family name. If they
                                  don''t, use the google_compute_image data source.
                                  For instance, the image centos-6-v20180104 includes
                                  its family name centos-6. These images can be referred
                                  by family name here. The image from which this disk
                                  was initialised.'
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: A map of key/value label pairs to assign
                                  to the instance. A set of key/value label pairs
                                  assigned to the disk.
                                type: object
                              size:
                                description: The size of the image in gigabytes. If
                                  not specified, it will inherit the size of its base
                                  image. The size of the image in gigabytes.
                                type: number
                              type:
                                description: The Google Compute Engine disk type.
                                  Such as pd-standard, pd-ssd or pd-balanced.
                                type: string
                            type: object
                          type: array
                        kmsKeySelfLink:
                          description: The self_link of the encryption key that is
                            stored in Google Cloud KMS to encrypt this disk. Only
                            one of kms_key_self_link and disk_encryption_key_raw may
                            be set.
                          type: string
                        mode:
                          description: Read/write mode for the disk. One of "READ_ONLY"
                            or "READ_WRITE".
                          type: string
                        source:
                          description: The name or self_link of the disk attached
                            to this instance.
                          type: string
                      type: object
                    type: array
                  canIpForward:
                    description: Whether to allow sending and receiving of packets
                      with non-matching source or destination IPs. This defaults to
                      false. Whether sending and receiving of packets with non-matching
                      source or destination IPs is allowed.
                    type: boolean
                  confidentialInstanceConfig:
                    description: Enable Confidential Mode on this VM. Structure is
                      documented below The Confidential VM config being used by the
                      instance.  on_host_maintenance has to be set to TERMINATE or
                      this will fail to create.
                    items:
                      properties:
                        enableConfidentialCompute:
                          description: Defines whether the instance should have confidential
                            compute enabled. on_host_maintenance has to be set to
                            TERMINATE or this will fail to create the VM. Defines
                            whether the instance should have confidential compute
                            enabled.
                          type: boolean
                      required:
                      - enableConfidentialCompute
                      type: object
                    type: array
                  deletionProtection:
                    description: 'Enable deletion protection on this instance. Defaults
                      to false. Note: you must disable deletion protection before
                      removing the resource , or the instance cannot be deleted and
                      the Terraform run will not complete successfully. Whether deletion
                      protection is enabled on this instance.'
                    type: boolean
                  description:
                    description: A brief description of this resource. A brief description
                      of the resource.
                    type: string
                  desiredStatus:
                    description: Desired status of the instance. Either "RUNNING"
                      or "TERMINATED". Desired status of the instance. Either "RUNNING"
                      or "TERMINATED".
                    type: string
                  enableDisplay:
                    description: 'Enable Virtual Displays on this instance. Note:
                      allow_stopping_for_update must be set to true or your instance
                      must have a desired_status of TERMINATED in order to update
                      this field. Whether the instance has virtual displays enabled.'
                    type: boolean
                  guestAccelerator:
                    description: 'List of the type and count of accelerator cards
                      attached to the instance. Structure documented below. Note:
                      GPU accelerators can only be used with on_host_maintenance option
                      set to TERMINATE. Note: This field uses attr-as-block mode to
                      avoid breaking users during the 0.12 upgrade. To explicitly
                      send a list of zero objects you must use the following syntax:
                      example=[] For more details about this behavior, see this section.
                      List of the type and count of accelerator cards attached to
                      the instance.'
                    items:
                      properties:
                        count:
                          description: The number of the guest accelerator cards exposed
                            to this instance.
                          type: number
                        type:
                          type: string
                      type: object
                    type: array
                  hostname:
                    description: A custom hostname for the instance. Must be a fully
                      qualified DNS name and RFC-1035-valid. Valid format is a series
                      of labels 1-63 characters long matching the regular expression
                      [a-z], concatenated with periods. The entire hostname must not
                      exceed 253 characters. Changing this forces a new resource to
                      be created. A custom hostname for the instance. Must be a fully
                      qualified DNS name and RFC-1035-valid. Valid format is a series
                      of labels 1-63 characters long matching the regular expression
                      [a-z]([-a-z0-9]*[a-z0-9]), concatenated with periods. The entire
                      hostname must not exceed 253 characters. Changing this forces
                      a new resource to be created.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A map of key/value label pairs to assign to the instance.
                      A set of key/value label pairs assigned to the instance.
                    type: object
                  machineType:
                    description: The machine type to create. The machine type to create.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: Metadata key/value pairs to make available from within
                      the instance. Ssh keys attached in the Cloud Console will be
                      removed. Add them to your config in order to keep them attached
                      to your instance. Metadata key/value pairs made available within
                      the instance.
                    type: object
                  metadataStartupScript:
                    description: An alternative to using the startup-script metadata
                      key, except this one forces the instance to be recreated if
                      it is changed. This replaces the startup-script metadata key
                      on the created instance and thus the two mechanisms are not
                      allowed to be used simultaneously.  Users are free to use either
                      mechanism - the only distinction is that this separate attribute
                      will cause a recreate on modification.  On import, metadata_startup_script
                      will not be set - if you choose to specify it you will see a
                      diff immediately after import causing a destroy/recreate operation.
                      If importing an instance and specifying this value is desired,
                      you will need to modify your state file manually using terraform
                      state commands. Metadata startup scripts made available within
                      the instance.
                    type: string
                  minCpuPlatform:
                    description: 'Specifies a minimum CPU platform for the VM instance.
                      Applicable values are the friendly names of CPU platforms, such
                      as Intel Haswell or Intel Skylake. See the complete list here.
                      Note: allow_stopping_for_update must be set to true or your
                      instance must have a desired_status of TERMINATED in order to
                      update this field. The minimum CPU platform specified for the
                      VM instance.'
                    type: string
                  networkInterface:
                    description: Networks to attach to the instance. This can be specified
                      multiple times. Structure is documented below. The networks
                      attached to the instance.
                    items:
                      properties:
                        accessConfig:
                          description: Access configurations, i.e. IPs via which this
                            instance can be accessed via the Internet. Omit to ensure
                            that the instance is not accessible from the Internet.
                            If omitted, ssh provisioners will not work unless Terraform
                            can send traffic to the instance's network . This block
                            can be repeated multiple times. Structure documented below.
                            Access configurations, i.e. IPs via which this instance
                            can be accessed via the Internet.
                          items:
                            properties:
                              natIp:
                                description: The IP address that will be 1:1 mapped
                                  to the instance's network ip. If not given, one
                                  will be generated. The IP address that is be 1:1
                                  mapped to the instance's network ip.
                                type: string
                              networkTier:
                                description: The networking tier used for configuring
                                  this instance. One of PREMIUM or STANDARD.
                                type: string
                              publicPtrDomainName:
                                description: The DNS domain name for the public PTR
                                  record.
                                type: string
                            type: object
                          type: array
                        aliasIpRange:
                          description: An array of alias IP ranges for this network
                            interface. Can only be specified for network interfaces
                            on subnet-mode networks. Structure documented below. An
                            array of alias IP ranges for this network interface.
                          items:
                            properties:
                              ipCidrRange:
                                description: The IP CIDR range represented by this
                                  alias IP range. This IP CIDR range must belong to
                                  the specified subnetwork and cannot contain IP addresses
                                  reserved by system or used by other network interfaces.
                                  This range may be a single IP address , a netmask  or
                                  a CIDR format string . The IP CIDR range represented
                                  by this alias IP range.
                                type: string
                              subnetworkRangeName:
                                description: The subnetwork secondary range name specifying
                                  the secondary range from which to allocate the IP
                                  CIDR range for this alias IP range. If left unspecified,
                                  the primary range of the subnetwork will be used.
                                  The subnetwork secondary range name specifying the
                                  secondary range from which to allocate the IP CIDR
                                  range for this alias IP range.
                                type: string
                            required:
                            - ipCidrRange
                            type: object
                          type: array
                        ipv6AccessConfig:
                          description: An array of IPv6 access configurations for
                            this interface. Currently, only one IPv6 access config,
                            DIRECT_IPV6, is supported. If there is no ipv6AccessConfig
                            specified, then this instance will have no external IPv6
                            Internet access. Structure documented below. An array
                            of IPv6 access configurations for this interface. Currently,
                            only one IPv6 access config, DIRECT_IPV6, is supported.
                            If there is no ipv6AccessConfig specified, then this instance
                            will have no external IPv6 Internet access.
                          items:
                            properties:
                              networkTier:
                                description: The service-level to be provided for
                                  IPv6 traffic when the subnet has an external subnet.
                                  Only PREMIUM tier is valid for IPv6
                                type: string
                              publicPtrDomainName:
                                description: The domain name to be used when creating
                                  DNSv6 records for the external IPv6 ranges.
                                type: string
                            required:
                            - networkTier
                            type: object
                          type: array
                        network:
                          description: The name or self_link of the network to attach
                            this interface to. Either network or subnetwork must be
                            provided. If network isn't provided it will be inferred
                            from the subnetwork. The name or self_link of the network
                            attached to this interface.
                          type: string
                        networkIp:
                          description: The private IP address to assign to the instance.
                            If empty, the address will be automatically assigned.
                            The private IP address assigned to the instance.
                          type: string
                        networkRef:
                          description: Reference to a Network to populate network.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        networkSelector:
                          description: Selector for a Network to populate network.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        nicType:
                          description: 'The type of vNIC to be used on this interface.
                            Possible values: GVNIC, VIRTIO_NET. The type of vNIC to
                            be used on this interface. Possible values:GVNIC, VIRTIO_NET'
                          type: string
                        queueCount:
                          description: The networking queue count that's specified
                            by users for the network interface. Both Rx and Tx queues
                            will be set to this number. It will be empty if not specified.
                            The networking queue count that's specified by users for
                            the network interface. Both Rx and Tx queues will be set
                            to this number. It will be empty if not specified.
                          type: number
                        stackType:
                          description: The stack type for this network interface to
                            identify whether the IPv6 feature is enabled or not. Values
                            are IPV4_IPV6 or IPV4_ONLY. If not specified, IPV4_ONLY
                            will be used. The stack type for this network interface
                            to identify whether the IPv6 feature is enabled or not.
                            If not specified, IPV4_ONLY will be used.
                          type: string
                        subnetwork:
                          description: The name or self_link of the subnetwork to
                            attach this interface to. Either network or subnetwork
                            must be provided. If network isn't provided it will be
                            inferred from the subnetwork. The subnetwork must exist
                            in the same region this instance will be created in. If
                            the network resource is in legacy mode, do not specify
                            this field. If the network is in auto subnet mode, specifying
                            the subnetwork is optional. If the network is in custom
                            subnet mode, specifying the subnetwork is required. The
                            name or self_link of the subnetwork attached to this interface.
                          type: string
                        subnetworkProject:
                          description: The project in which the subnetwork belongs.
                            If the subnetwork is a self_link, this field is ignored
                            in favor of the project defined in the subnetwork self_link.
                            If the subnetwork is a name and this field is not provided,
                            the provider project is used. The project in which the
                            subnetwork belongs.
                          type: string
                        subnetworkRef:
                          description: Reference to a Subnetwork to populate subnetwork.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        subnetworkSelector:
                          description: Selector for a Subnetwork to populate subnetwork.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used. The ID
                      of the project in which the resource belongs. If self_link is
                      provided, this value is ignored. If neither self_link nor project
                      are provided, the provider project is used.
                    type: string
                  reservationAffinity:
                    description: Specifies the reservations that this instance can
                      consume from. Structure is documented below. Specifies the reservations
                      that this instance can consume from.
                    items:
                      properties:
                        specificReservation:
                          description: Specifies the label selector for the reservation
                            to use.. Structure is documented below. Specifies the
                            label selector for the reservation to use.
                          items:
                            properties:
                              key:
                                description: Corresponds to the label key of a reservation
                                  resource. To target a SPECIFIC_RESERVATION by name,
                                  specify compute.googleapis.com/reservation-name
                                  as the key and specify the name of your reservation
                                  as the only value.
                                type: string
                              values:
                                description: Corresponds to the label values of a
                                  reservation resource.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - values
                            type: object
                          type: array
                        type:
                          description: The type of reservation from which this instance
                            can consume resources.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  resourcePolicies:
                    description: A list of short names or self_links of resource policies
                      to attach to the instance. Modifying this list will cause the
                      instance to recreate. Currently a max of 1 resource policy is
                      supported. A list of short names or self_links of resource policies
                      to attach to the instance. Currently a max of 1 resource policy
                      is supported.
                    items:
                      type: string
                    type: array
                  scheduling:
                    description: The scheduling strategy to use. More details about
                      this configuration option are detailed below. The scheduling
                      strategy being used by the instance.
                    items:
                      properties:
                        automaticRestart:
                          description: Specifies if the instance should be restarted
                            if it was terminated by Compute Engine . Defaults to true.
                            Specifies if the instance should be restarted if it was
                            terminated by Compute Engine (not a user).
                          type: boolean
                        minNodeCpus:
                          description: The minimum number of virtual CPUs this instance
                            will consume when running on a sole-tenant node.
                          type: number
                        nodeAffinities:
                          description: Specifies node affinities or anti-affinities
                            to determine which sole-tenant nodes your instances and
                            managed instance groups will use as host systems. Read
                            more on sole-tenant node creation here. Structure documented
                            below. Specifies node affinities or anti-affinities to
                            determine which sole-tenant nodes your instances and managed
                            instance groups will use as host systems.
                          items:
                            properties:
                              key:
                                type: string
                              operator:
                                description: The operator. Can be IN for node-affinities
                                  or NOT_IN for anti-affinities.
                                type: string
                              values:
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            - values
                            type: object
                          type: array
                        onHostMaintenance:
                          description: Describes maintenance behavior for the instance.
                            Can be MIGRATE or TERMINATE, for more info, read here.
                            Describes maintenance behavior for the instance. One of
                            MIGRATE or TERMINATE,
                          type: string
                        preemptible:
                          description: Specifies if the instance is preemptible. If
                            this field is set to true, then automatic_restart must
                            be set to false.  Defaults to false. Whether the instance
                            is preemptible.
                          type: boolean
                        provisioningModel:
                          description: Describe the type of preemptible VM. This field
                            accepts the value STANDARD or SPOT. If the value is STANDARD,
                            there will be no discount. If this   is set to SPOT, preemptible
                            should be true and auto_restart should be false. For more
                            info about SPOT, read here Whether the instance is spot.
                            If this is set as SPOT.
                          type: string
                      type: object
                    type: array
                  scratchDisk:
                    description: Scratch disks to attach to the instance. This can
                      be specified multiple times for multiple scratch disks. Structure
                      is documented below. The scratch disks attached to the instance.
                    items:
                      properties:
                        interface:
                          description: The disk interface to use for attaching this
                            disk; either SCSI or NVME. The disk interface used for
                            attaching this disk. One of SCSI or NVME.
                          type: string
                      required:
                      - interface
                      type: object
                    type: array
                  serviceAccount:
                    description: 'Service account to attach to the instance. Structure
                      is documented below. Note: allow_stopping_for_update must be
                      set to true or your instance must have a desired_status of TERMINATED
                      in order to update this field. The service account to attach
                      to the instance.'
                    items:
                      properties:
                        email:
                          description: 'The service account e-mail address. If not
                            given, the default Google Compute Engine service account
                            is used. Note: allow_stopping_for_update must be set to
                            true or your instance must have a desired_status of TERMINATED
                            in order to update this field. The service account e-mail
                            address.'
                          type: string
                        emailRef:
                          description: Reference to a ServiceAccount in cloudplatform
                            to populate email.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        emailSelector:
                          description: Selector for a ServiceAccount in cloudplatform
                            to populate email.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        scopes:
                          description: 'A list of service scopes. Both OAuth2 URLs
                            and gcloud short names are supported. To allow full access
                            to all Cloud APIs, use the cloud-platform scope. See a
                            complete list of scopes here. Note: allow_stopping_for_update
                            must be set to true or your instance must have a desired_status
                            of TERMINATED in order to update this field. A list of
                            service scopes.'
                          items:
                            type: string
                          type: array
                      required:
                      - scopes
                      type: object
                    type: array
                  shieldedInstanceConfig:
                    description: 'Enable Shielded VM on this instance. Shielded VM
                      provides verifiable integrity to prevent against malware and
                      rootkits. Defaults to disabled. Structure is documented below.
                      Note: shielded_instance_config can only be used with boot images
                      with shielded vm support. See the complete list here. Note:
                      allow_stopping_for_update must be set to true or your instance
                      must have a desired_status of TERMINATED in order to update
                      this field. The shielded vm config being used by the instance.'
                    items:
                      properties:
                        enableIntegrityMonitoring:
                          description: 'Compare the most recent boot measurements
                            to the integrity policy baseline and return a pair of
                            pass/fail results depending on whether they match or not.
                            Defaults to true. Note: allow_stopping_for_update must
                            be set to true or your instance must have a desired_status
                            of TERMINATED in order to update this field. Whether integrity
                            monitoring is enabled for the instance.'
                          type: boolean
                        enableSecureBoot:
                          description: 'Verify the digital signature of all boot components,
                            and halt the boot process if signature verification fails.
                            Defaults to false. Note: allow_stopping_for_update must
                            be set to true or your instance must have a desired_status
                            of TERMINATED in order to update this field. Whether secure
                            boot is enabled for the instance.'
                          type: boolean
                        enableVtpm:
                          description: 'Use a virtualized trusted platform module,
                            which is a specialized computer chip you can use to encrypt
                            objects like keys and certificates. Defaults to true.
                            Note: allow_stopping_for_update must be set to true or
                            your instance must have a desired_status of TERMINATED
                            in order to update this field. Whether the instance uses
                            vTPM.'
                          type: boolean
                      type: object
                    type: array
                  tags:
                    description: A list of network tags to attach to the instance.
                      The list of tags attached to the instance.
                    items:
                      type: string
                    type: array
                  zone:
                    description: The zone that the machine should be created in. If
                      it is not provided, the provider zone is used. The zone of the
                      instance. If self_link is provided, this value is ignored. If
                      neither self_link nor zone are provided, the provider zone is
                      used.
                    type: string
                required:
                - bootDisk
                - machineType
                - networkInterface
                - zone
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              atProvider:
                properties:
                  attachedDisk:
                    description: Additional disks to attach to the instance. Can be
                      repeated multiple times for multiple disks. Structure is documented
                      below. List of disks attached to the instance
                    items:
                      properties:
                        diskEncryptionKeySha256:
                          description: The RFC 4648 base64 encoded SHA-256 hash of
                            the customer-supplied encryption key that protects this
                            resource.
                          type: string
                      type: object
                    type: array
                  bootDisk:
                    description: The boot disk for the instance. Structure is documented
                      below. The boot disk for the instance.
                    items:
                      properties:
                        diskEncryptionKeySha256:
                          description: The RFC 4648 base64 encoded SHA-256 hash of
                            the customer-supplied encryption key that protects this
                            resource.
                          type: string
                      type: object
                    type: array
                  cpuPlatform:
                    description: The CPU platform used by this instance. The CPU platform
                      used by this instance.
                    type: string
                  currentStatus:
                    description: Current status of the instance.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/zones/{{zone}}/instances/{{name}}
                    type: string
                  instanceId:
                    description: The server-assigned unique identifier of this instance.
                      The server-assigned unique identifier of this instance.
                    type: string
                  labelFingerprint:
                    description: The unique fingerprint of the labels. The unique
                      fingerprint of the labels.
                    type: string
                  metadataFingerprint:
                    description: The unique fingerprint of the metadata. The unique
                      fingerprint of the metadata.
                    type: string
                  networkInterface:
                    description: Networks to attach to the instance. This can be specified
                      multiple times. Structure is documented below. The networks
                      attached to the instance.
                    items:
                      properties:
                        ipv6AccessConfig:
                          description: An array of IPv6 access configurations for
                            this interface. Currently, only one IPv6 access config,
                            DIRECT_IPV6, is supported. If there is no ipv6AccessConfig
                            specified, then this instance will have no external IPv6
                            Internet access. Structure documented below. An array
                            of IPv6 access configurations for this interface. Currently,
                            only one IPv6 access config, DIRECT_IPV6, is supported.
                            If there is no ipv6AccessConfig specified, then this instance
                            will have no external IPv6 Internet access.
                          items:
                            properties:
                              externalIpv6:
                                description: The first IPv6 address of the external
                                  IPv6 range associated with this instance, prefix
                                  length is stored in externalIpv6PrefixLength in
                                  ipv6AccessConfig. The field is output only, an IPv6
                                  address from a subnetwork associated with the instance
                                  will be allocated dynamically.
                                type: string
                              externalIpv6PrefixLength:
                                description: The prefix length of the external IPv6
                                  range.
                                type: string
                            type: object
                          type: array
                        ipv6AccessType:
                          description: One of EXTERNAL, INTERNAL to indicate whether
                            the IP can be accessed from the Internet. This field is
                            always inherited from its subnetwork. One of EXTERNAL,
                            INTERNAL to indicate whether the IP can be accessed from
                            the Internet. This field is always inherited from its
                            subnetwork.
                          type: string
                        name:
                          description: A unique name for the resource, required by
                            GCE. Changing this forces a new resource to be created.
                            The name of the interface
                          type: string
                      type: object
                    type: array
                  selfLink:
                    description: The URI of the created resource. The URI of the created
                      resource.
                    type: string
                  tagsFingerprint:
                    description: The unique fingerprint of the tags. The unique fingerprint
                      of the tags.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
