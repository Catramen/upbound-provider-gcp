apiVersion: compute.gcp.upbound.io/v1beta1
kind: NetworkEndpoint
metadata:
  labels:
    testing.upbound.io/example-name: default-endpoint
  name: default-endpoint
spec:
  forProvider:
    instance: ${google_compute_instance.endpoint-instance.name}
    ipAddress: ${google_compute_instance.endpoint-instance.network_interface[0].network_ip}
    networkEndpointGroup: ${google_compute_network_endpoint_group.neg.name}
    port: ${google_compute_network_endpoint_group.neg.default_port}

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Instance
metadata:
  labels:
    testing.upbound.io/example-name: endpoint-instance
  name: endpoint-instance
spec:
  forProvider:
    bootDisk:
    - initializeParams:
      - image: ${data.google_compute_image.my_image.self_link}
    machineType: e2-medium
    networkInterface:
    - accessConfig:
      - {}
      subnetworkSelector:
        matchLabels:
          testing.upbound.io/example-name: default

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Network
metadata:
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    autoCreateSubnetworks: false

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: NetworkEndpointGroup
metadata:
  labels:
    testing.upbound.io/example-name: group
  name: group
spec:
  forProvider:
    defaultPort: "90"
    networkSelector:
      matchLabels:
        testing.upbound.io/example-name: default
    subnetworkSelector:
      matchLabels:
        testing.upbound.io/example-name: default
    zone: us-central1-a

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Subnetwork
metadata:
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    ipCidrRange: 10.0.0.1/16
    networkSelector:
      matchLabels:
        testing.upbound.io/example-name: default
    region: us-central1

---

