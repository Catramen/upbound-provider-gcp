---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: alertpolicies.monitoring.gcp.upbound.io
spec:
  group: monitoring.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: AlertPolicy
    listKind: AlertPolicyList
    plural: alertpolicies
    singular: alertpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AlertPolicy is the Schema for the AlertPolicys API. A description
          of the conditions under which some aspect of your system is considered to
          be "unhealthy" and the ways to notify people or services about this state.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AlertPolicySpec defines the desired state of AlertPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  alertStrategy:
                    description: Control over how this alert policy's notification
                      channels are notified. Structure is documented below.
                    items:
                      properties:
                        autoClose:
                          description: If an alert policy that was active has no data
                            for this long, any open incidents will close.
                          type: string
                        notificationRateLimit:
                          description: Required for alert policies with a LogMatch
                            condition. This limit is not implemented for alert policies
                            that are not log-based. Structure is documented below.
                          items:
                            properties:
                              period:
                                description: Not more than one notification per period.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  combiner:
                    description: How to combine the results of multiple conditions
                      to determine if an incident should be opened. Possible values
                      are AND, OR, and AND_WITH_MATCHING_RESOURCE.
                    type: string
                  conditions:
                    description: A list of conditions for the policy. The conditions
                      are combined by AND or OR according to the combiner field. If
                      the combined conditions evaluate to true, then an incident is
                      created. A policy can have from one to six conditions. Structure
                      is documented below.
                    items:
                      properties:
                        conditionAbsent:
                          description: A condition that checks that a time series
                            continues to receive new data points. Structure is documented
                            below.
                          items:
                            properties:
                              aggregations:
                                items:
                                  properties:
                                    alignmentPeriod:
                                      type: string
                                    crossSeriesReducer:
                                      type: string
                                    groupByFields:
                                      items:
                                        type: string
                                      type: array
                                    perSeriesAligner:
                                      type: string
                                  type: object
                                type: array
                              duration:
                                type: string
                              filter:
                                type: string
                              trigger:
                                items:
                                  properties:
                                    count:
                                      type: number
                                    percent:
                                      type: number
                                  type: object
                                type: array
                            required:
                            - duration
                            type: object
                          type: array
                        conditionMatchedLog:
                          description: A condition that checks for log messages matching
                            given constraints. If set, no other conditions can be
                            present. Structure is documented below.
                          items:
                            properties:
                              filter:
                                type: string
                              labelExtractors:
                                additionalProperties:
                                  type: string
                                description: A map from a label key to an extractor
                                  expression, which is used to extract the value for
                                  this label key. Each entry in this map is a specification
                                  for how data should be extracted from log entries
                                  that match filter. Each combination of extracted
                                  values is treated as a separate rule for the purposes
                                  of triggering notifications. Label keys and corresponding
                                  values can be used in notifications generated by
                                  this condition.
                                type: object
                            required:
                            - filter
                            type: object
                          type: array
                        conditionMonitoringQueryLanguage:
                          description: A Monitoring Query Language query that outputs
                            a boolean stream Structure is documented below.
                          items:
                            properties:
                              duration:
                                type: string
                              query:
                                description: Monitoring Query Language query that
                                  outputs a boolean stream.
                                type: string
                              trigger:
                                items:
                                  properties:
                                    count:
                                      type: number
                                    percent:
                                      type: number
                                  type: object
                                type: array
                            required:
                            - duration
                            - query
                            type: object
                          type: array
                        conditionThreshold:
                          description: A condition that compares a time series against
                            a threshold. Structure is documented below.
                          items:
                            properties:
                              aggregations:
                                items:
                                  properties:
                                    alignmentPeriod:
                                      type: string
                                    crossSeriesReducer:
                                      type: string
                                    groupByFields:
                                      items:
                                        type: string
                                      type: array
                                    perSeriesAligner:
                                      type: string
                                  type: object
                                type: array
                              comparison:
                                description: The comparison to apply between the time
                                  series and the threshold . The comparison is applied
                                  on each time series, with the time series on the
                                  left-hand side and the threshold on the right-hand
                                  side. Only COMPARISON_LT and COMPARISON_GT are supported
                                  currently. Possible values are COMPARISON_GT, COMPARISON_GE,
                                  COMPARISON_LT, COMPARISON_LE, COMPARISON_EQ, and
                                  COMPARISON_NE.
                                type: string
                              denominatorAggregations:
                                description: Specifies the alignment of data points
                                  in individual time series selected by denominatorFilter
                                  as well as how to combine the retrieved time series
                                  together .When computing ratios, the aggregations
                                  and denominator_aggregations fields must use the
                                  same alignment period and produce time series that
                                  have the same periodicity and labels.This field
                                  is similar to the one in the MetricService.ListTimeSeries
                                  request. It is advisable to use the ListTimeSeries
                                  method when debugging this field. Structure is documented
                                  below.
                                items:
                                  properties:
                                    alignmentPeriod:
                                      type: string
                                    crossSeriesReducer:
                                      type: string
                                    groupByFields:
                                      items:
                                        type: string
                                      type: array
                                    perSeriesAligner:
                                      type: string
                                  type: object
                                type: array
                              denominatorFilter:
                                description: A filter that identifies a time series
                                  that should be used as the denominator of a ratio
                                  that will be compared with the threshold. If a denominator_filter
                                  is specified, the time series specified by the filter
                                  field will be used as the numerator.The filter is
                                  similar to the one that is specified in the MetricService.ListTimeSeries
                                  request  and must specify the metric type and optionally
                                  may contain restrictions on resource type, resource
                                  labels, and metric labels. This field may not exceed
                                  2048 Unicode characters in length.
                                type: string
                              duration:
                                type: string
                              filter:
                                type: string
                              thresholdValue:
                                description: A value against which to compare the
                                  time series.
                                type: number
                              trigger:
                                items:
                                  properties:
                                    count:
                                      type: number
                                    percent:
                                      type: number
                                  type: object
                                type: array
                            required:
                            - comparison
                            - duration
                            type: object
                          type: array
                        displayName:
                          type: string
                      required:
                      - displayName
                      type: object
                    type: array
                  displayName:
                    type: string
                  documentation:
                    description: Documentation that is included with notifications
                      and incidents related to this policy. Best practice is for the
                      documentation to include information to help responders understand,
                      mitigate, escalate, and correct the underlying problems detected
                      by the alerting policy. Notification channels that have limited
                      capacity might not show this documentation. Structure is documented
                      below.
                    items:
                      properties:
                        content:
                          description: The text of the documentation, interpreted
                            according to mimeType. The content may not exceed 8,192
                            Unicode characters and may not exceed more than 10,240
                            bytes when encoded in UTF-8 format, whichever is smaller.
                          type: string
                        mimeType:
                          description: The format of the content field. Presently,
                            only the value "text/markdown" is supported.
                          type: string
                      type: object
                    type: array
                  enabled:
                    description: Whether or not the policy is enabled. The default
                      is true.
                    type: boolean
                  notificationChannels:
                    description: Identifies the notification channels to which notifications
                      should be sent when incidents are opened or closed or when new
                      violations occur on an already opened incident. Each element
                      of this array corresponds to the name field in each of the NotificationChannel
                      objects that are returned from the notificationChannels.list
                      method. The syntax of the entries in this field is projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]
                    items:
                      type: string
                    type: array
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  userLabels:
                    additionalProperties:
                      type: string
                    description: This field is intended to be used for organizing
                      and identifying the AlertPolicy objects.The field can contain
                      up to 64 entries. Each key and value is limited to 63 Unicode
                      characters or 128 bytes, whichever is smaller. Labels and values
                      can contain only lowercase letters, numerals, underscores, and
                      dashes. Keys must begin with a letter.
                    type: object
                required:
                - combiner
                - conditions
                - displayName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AlertPolicyStatus defines the observed state of AlertPolicy.
            properties:
              atProvider:
                properties:
                  conditions:
                    description: A list of conditions for the policy. The conditions
                      are combined by AND or OR according to the combiner field. If
                      the combined conditions evaluate to true, then an incident is
                      created. A policy can have from one to six conditions. Structure
                      is documented below.
                    items:
                      properties:
                        name:
                          type: string
                      type: object
                    type: array
                  creationRecord:
                    description: A read-only record of the creation of the alerting
                      policy. If provided in a call to create or update, this field
                      will be ignored. Structure is documented below.
                    items:
                      properties:
                        mutateTime:
                          description: When the change occurred.
                          type: string
                        mutatedBy:
                          description: The email address of the user making the change.
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format {{name}}
                    type: string
                  name:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
